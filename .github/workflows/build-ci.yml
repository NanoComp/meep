name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: "Test ${{ matrix.name-prefix }}"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name-prefix: "C++ without MPI"
            enable-mpi: false
            enable-mpb: false
            configure-options: "--without-python"
            python-version: "none"
          - name-prefix: "C++ with MPI"
            enable-mpi: true
            enable-mpb: false
            configure-options: "--without-python --with-mpi"
            python-version: "none"
          - name-prefix: "Python 3.6"
            enable-mpi: false
            enable-mpb: true
            configure-options: "--enable-maintainer-mode"
            python-version: "3.6"
          - name-prefix: "Python 3.9"
            enable-mpi: false
            enable-mpb: true
            configure-options: "--enable-maintainer-mode"
            python-version: "3.9"

    steps:
    - name: Install Common Dependencies
      run: |
        sudo apt-get -y update
        sudo apt-get -y install autoconf automake libfftw3-dev libgsl-dev libharminv-dev libpng-dev swig
        mkdir -p ~/install
        cd ~/install
        git clone https://github.com/NanoComp/libctl.git
        cd libctl/
        sh autogen.sh --enable-shared
        make && sudo make install
        cd ~/install
        git clone https://github.com/HomerReid/libGDSII.git
        cd libGDSII/
        sh autogen.sh
        make && sudo make install
    - name: Install Serial
      if: ${{ matrix.enable-mpi == false }}
      run: |
        export RPATH_FLAGS="-Wl,-rpath,/usr/local/lib"
        export MY_LDFLAGS="-L/usr/local/lib ${RPATH_FLAGS}"
        export MY_CPPFLAGS="-I/usr/local/include"
        export MY_CC="cc"
        sudo apt-get -y install libhdf5-dev hdf5-tools
    - name: Install MPI
      if: matrix.enable-mpi
      run: |
        export RPATH_FLAGS="-Wl,-rpath,/usr/local/lib:/usr/lib/x86_64-linux-gnu/hdf5/openmpi"
        export MY_LDFLAGS="-L/usr/local/lib -L/usr/lib/x86_64-linux-gnu/hdf5/openmpi ${RPATH_FLAGS}"
        export MY_CPPFLAGS="-I/usr/local/include -I/usr/include/hdf5/openmpi"
        export MY_CC="mpicc"
        sudo apt-get -y install libhdf5-openmpi-dev libopenmpi-dev hdf5-tools
    - name: Install Other Dependencies
      run: |
        cd ~/install
        git clone https://github.com/NanoComp/h5utils.git
        cd h5utils/
        sh autogen.sh CC=${MY_CC} LDFLAGS="${MY_LDFLAGS}" CPPFLAGS="${MY_CPPFLAGS}"
        make && sudo make install
    - name: Install MPB
      if: matrix.enable-mpb
      run: |
        cd ~/install
        git clone https://github.com/NanoComp/mpb.git
        cd mpb/
        sh autogen.sh --enable-shared CC=${MY_CC} LDFLAGS="${MY_LDFLAGS}" CPPFLAGS="${MY_CPPFLAGS}" --with-hermitian-eps
        make && sudo make install
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python (version ${{ matrix.python-version }})
      if: ${{ matrix.python-version != 'none' }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      if: ${{ matrix.python-version != 'none' }}
      run: pip install autograd h5py jax jaxlib matplotlib mpi4py numpy parameterized pytest scipy
    - name: configure
      run: |
        sh autogen.sh --without-scheme --enable-shared CC=${MY_CC} LDFLAGS="${MY_LDFLAGS}" CPPFLAGS="${MY_CPPFLAGS}" ${{ matrix.configure-options }}
    - name: make
      run: make
    - name: Run Python tests
      if: ${{ matrix.python-version != 'none' }}
      env:
        MEEP_SKIP_LARGE_TESTS: 1
      run: |
        export PYTHONPATH="${PWD}/python:${PYTHONPATH}"
        pytest python/tests
    - name: Run C++ tests
      if: ${{ matrix.python-version == 'none' }}
      run: make check
